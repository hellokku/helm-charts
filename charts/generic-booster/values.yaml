# Default values for generic-booster.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# this is app.kuberneteis.io/name, default values is "{{ .Chart.Name }}"
# It is the name of the application when using the istio 

# ----------------------------
# Service Mesh
# ----------------------------
# -- set app.kubernetes.io/instance in matchLabel as this value
appName: ""

# -- added specifically application app.kubernetes.io/version to pod Label, its default is image tag
appVersion: stable

# -- if true, app.kubernetes.io/application label to pod Selector
appVersionSelector: true

# -- if true, added app.kubernetes.io/version selector to service's selector
serviceVersionSelector: false

#  service_name:
# ----------------------------
# Ingress
# ----------------------------
ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local


# ----------------------------
# Service & ServiceAccount
# ----------------------------
service:
  enabled: true
  type: ClusterIP
  clusterIP: ""
  port: 80
  portName: http
  targetPort: http
  ports: []
#    - name: https
#      port: 443
#      protocol: TCP
#      targetPort: https 
#    - name: someport
#      port: 1234
#      protocol: TCP
#      targetPort: someport
  labels: {}
  annotations: {}
  name: ""



serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""


# ----------------------------
# Deployment or StatefulSet
# ----------------------------
# -- Choose one out of deploy, deployment, sts, statefulset
resource_type: "deployment"

# default deployment's strategy - only deployment type
strategy:
  # deployment
  rollingUpdate:
    maxSurge: 25%
    maxUnavailable: 25%
  type: RollingUpdate

# default statefulset strategy - statefulset, or daemonset type
updateStrategy:
  # statefulset
  type: RollingUpdate

# -- if you use the HPA, set it to -1
replicaCount: 1

# -- it's an additional labels of the deployments
labels: {}

# -- pod selector matchLabels, if you define this, there replace the matchLabels
matchLabels: {}

# -- pod spread constraints
topologySpreadConstraints: []
#- maxSkew: 1
#  topologyKey: topology.kubernetes.io/zone
#  whenUnsatisfiable: DoNotSchedule
#  labelSelector:
#    matchLabels:
#      foo: bar

# ----------------------------
# Pod
# ----------------------------
# -- it's an additional labels of the Pod
podLabels: {}
#istio.io/rev: "1-10-3"

# -- it's an additional annotations of the Pod
podAnnotations: {}
#prometheus.io/scrape: 'true'
#prometheus.io/path: '/prometheus/metrics'
#prometheus.io/port: '80'
#fluentbit.io/parser_stream-container
#fluentbit.io/exclude_stream-container

# -- it's Pod scope securityContext 
podSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# -- nodeSelector
nodeSelector: {}

# -- tolerations
tolerations: []

# -- affinity
affinity: {}

# -- termination grace period seconds for Pod
terminationGracePeriodSeconds: 30

# ----------------------------
# Container
# ----------------------------
# -- custom init containers
initContainers: []
#- name: init-chown-data
#  image: "busybox:1.31.1"
#  imagePullPolicy: IfNotPresent
#  securityContext:
#    runAsNonRoot: false
#    runAsUser: 0
#  command: ["chown", "-R", "472:472", "/var/lib/simple"]
#  resources:
#    {}
#  volumeMounts:
#    - name: storage
#      mountPath: "/var/lib/simple"


# -- images.tag must be defined
image:
  repository: nginx
  pullPolicy: IfNotPresent
  tag: latest

# -- secret to pull image
imagePullSecrets: []
# -- it's better not to use it

# -- the name must be defined as config-maps
containerPorts:
- containerPort: 80
  protocol: TCP
  name: http

# -- securityContext for container scope
containerSecurityContext: {}
#  fsGroup: 65534

# -- container resources, feel-free
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- container lifecycle, feel-free define   
lifecycle: {}
#  postStart:
#    exec:
#      command:
#      - sh
#      - -c
#      - sleep 10
#  preStop:
#    exec:
#      command: [
#        # Gracefully shutdown nginx
#        "/usr/sbin/nginx", "-s", "quit"
#      ] 

# -- custom command
command: []
# java -jar /data/app.jar
#  - java
#  - -jar
#  - /data/app.jar

# -- additional extra Command, for specific command
extraCommand: []

# -- custom argument
args: []
# location is /data/secret/db.properties
#  - '--spring.config.additional-location=file:./secret/db.properties'

# -- additional extra Arguments, for specific args
extraArgs: []

# -- additional environments
env: []
#  - name: YOUR_ENV
#    value: my-env
#  - name: SPRING_PROFILES_ACTIVE
#    value: prd
#  - name: JAVA_TOOL_OPTIONS
#    value: -Xms1g -Xmx3g

# -- additional extra environments, for specific env
extraEnv: []

extraEnvFrom: []

# -- overwrite startupProbe
startupProbe: {}
#  httpGet:
#    path: /
#    port: http

# -- overwrite livenessProbe
livenessProbe: {}
#  httpGet:
#    path: /
#    port: http

# -- overwrite readinessProble
readinessProbe: {}
#  httpGet:
#    path: /
#    port: http

# -- volumes
volumes: []
extraVolumes: []
#- name: mysql-tls
#  secret:
#    secretName: selfsigned-cert-tls
#- name: mysql-cnf
#  configMap:
#    name: mysql-cnf
# -- configmap list

# -- volumeMounts
volumeMounts: []
extraVolumeMounts: []
#- name: mysql-tls
#  mountPath: /etc/mysql/tls
#  readOnly: true
#- mountPath: /etc/mysql/conf.d/my.cnf
#  name: mysql-cnf
#  subPath: my.cnf
#- mountPath: /var/lib/mysql
#  name: mysql-data

configMaps: []
#- name: example
#  annotations: {}
#  data:
#    example.json: |-
#      {
#          "matchmaker":{            
#              "hostname":"xxx.yyy.zzz.com",
#              "grpcport":82,
#              "httpport":80
#          }
#      }
#  application.properties: |
#    # info, git container build info
#    management.endpoint.info.enabled=true
#    management.info.git.mode=full
#    management.info.build.enabled=false

# ----------------------------
# VolumeClaminTemplate for Statefulset
# ----------------------------
# -- define volumeClaimTemplates, only statefulset type
volumeClaimTemplates: []
# -- extraContainers
extraContainers: []

# -- test-connection
testConnection: true

# ----------------------------
# HPA
# ----------------------------
# -- hpa
autoscaling:
  enabled: false
  annotations: {}
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
  metrics: []
#    - type: Resource
#      resource:
#        name: memory
#        target:
#          type: Utilization
#          averageUtilization: 80

# ----------------------------
# datadog
# ----------------------------
#- name: JAVA_TOOL_OPTIONS
#  value: ... -javaagent:/datadog/apm/agent/dd-java-agent.jar

datadog:
  enabled: false
  serviceName: ""
  language: java
  env: wedapne2
  # if not was defined, default is image.tag
#  version: stable
  configs:
    DD_TRACE_ENABLED: "true"
#  -- global sampling rate
#  - DD_TRACE_SAMPLE_RATE: "0.1"
    DD_PROFILING_ENABLED: "false"
    DD_LOGS_INJECTION: "false"
    DD_JMXFETCH_ENABLED: "true"
#  a number of traces per second per service instance.
#  If no DD_TRACE_RATE_LIMIT value is set, a limit of 100 traces per second is applied.
#  - DD_TRACE_RATE_LIMIT: "100"
    DD_DOGSTATSD_NON_LOCAL_TRAFFIC: "true"
#    DD_TRACE_ANNOTATIONS: 'org.springframework.transaction.annotation.Transactional;org.springframework.context.event.EventListener'

git: {}
#  sha:
#  repository:

sgp:
  enabled: false